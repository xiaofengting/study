import{_ as n,o as s,c as a,a as e}from"./app.f886be28.js";const p={},t=e(`<h3 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u6709\u5E8F\u6574\u6570\u6570\u7EC4\uFF0C\u5143\u7D20\u5404\u4E0D\u76F8\u540C\u4E14\u6309\u5347\u5E8F\u6392\u5217\u3002<br> \u7F16\u5199\u4E00\u4E2A\u7B97\u6CD5\uFF0C\u521B\u5EFA\u4E00\u68F5\u9AD8\u5EA6\u6700\u5C0F\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u3002</p><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: [-10,-3,0,5,9]
\u4E00\u4E2A\u53EF\u80FD\u7684\u7B54\u6848\u662F\uFF1A[0,-3,9,-10,null,5]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u5173\u952E\u70B9\uFF1A\u4E8C\u5206\u6CD5</p><p>\u9AD8\u5EA6\u6700\u5C0F\u7684\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u8981\u6C42\u5DE6\u53F3\u5B50\u6811\u8282\u70B9\u6570\u76EE\u5DEE\u6700\u5C11\u3002<br> \u81EA\u7136\uFF0C\u4E0D\u65AD\u4E8C\u5206\u5C31\u53EF\u4EE5\u4E86\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n)<br> \u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(log n)\uFF0C\u4E0D\u8003\u8651\u4F5C\u4E3A\u7ED3\u679C\u7684\u4E8C\u53C9\u6811\u3002</p><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode</span> <span class="token punctuation">{</span>  <span class="token comment">// \u4E8C\u53C9\u6811\u5B9A\u4E49</span>
  val<span class="token operator">:</span> <span class="token builtin">number</span>
  left<span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> left<span class="token operator">?</span><span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> right<span class="token operator">?</span><span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> val
    <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> left <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> left
    <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> right <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> right
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">sortedArrayToBST</span><span class="token punctuation">(</span>nums<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token punctuation">(</span>low<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> high<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>low <span class="token operator">&gt;=</span> high<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">bst</span><span class="token punctuation">(</span>low<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">bst</span><span class="token punctuation">(</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">bst</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[t];function c(l,r){return s(),a("div",null,o)}var u=n(p,[["render",c],["__file","25. \u6700\u5C0F\u9AD8\u5EA6\u6811.html.vue"]]);export{u as default};
