import{_ as n,o as s,c as a,a as t}from"./app.f886be28.js";const e={},p=t(`<h3 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u5B57\u7B26\u4E32\u4E2D\u53EA\u5305\u542B\u5927\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD\u3002<br> \u5229\u7528\u5B57\u7B26\u91CD\u590D\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u7F16\u5199\u4E00\u79CD\u65B9\u6CD5\uFF0C\u5B9E\u73B0\u57FA\u672C\u7684\u5B57\u7B26\u4E32\u538B\u7F29\u529F\u80FD\u3002<br> \u6BD4\u5982\uFF0C\u5B57\u7B26\u4E32 <code>aabcccccaaa</code> \u4F1A\u53D8\u4E3A <code>a2b1c5a3</code>\u3002<br> \u82E5\u201C\u538B\u7F29\u201D\u540E\u7684\u5B57\u7B26\u4E32\u6CA1\u6709\u53D8\u77ED\uFF0C\u5219\u8FD4\u56DE\u539F\u5148\u7684\u5B57\u7B26\u4E32\u3002</p><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// \u793A\u4F8B\u4E00
\u8F93\u5165\uFF1A&quot;aabcccccaaa&quot;
\u8F93\u51FA\uFF1A&quot;a2b1c5a3&quot;
// \u793A\u4F8B\u4E8C
\u8F93\u5165\uFF1A&quot;abbccd&quot;
\u8F93\u51FA\uFF1A&quot;abbccd&quot;
\u8BF4\u660E\uFF1A\u538B\u7F29\u540E\u6BD4\u539F\u5B57\u7B26\u4E32\u957F\u5EA6\u66F4\u957F\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u636E\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h3><p>\u5B57\u7B26\u4E32\u957F\u5EA6\u8303\u56F4 <code>[0, 50000]</code></p><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u5173\u952E\u70B9\uFF1A\u6A21\u62DF</p><p>\u6A21\u62DF\u5B9E\u73B0\uFF0C\u4F9D\u6B21\u904D\u5386\u540E\u5F97\u5230\u538B\u7F29\u540E\u7684\u5B57\u7B26\u4E32\uFF0C\u4E0E\u539F\u5B57\u7B26\u4E32\u6BD4\u8F83\u957F\u5EA6\u5373\u53EF\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n)\uFF0Cn \u4E3A\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u3002<br> \u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(1)\uFF0C\u4E0D\u5305\u542B\u5B58\u50A8\u7B54\u6848\u7684\u7A7A\u95F4\u3002</p><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">compressString</span><span class="token punctuation">(</span><span class="token constant">S</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">S</span><span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant">S</span>
  <span class="token keyword">let</span> ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> last <span class="token operator">=</span> <span class="token constant">S</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    count <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token constant">S</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">S</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> last<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      count<span class="token operator">++</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      ans<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>last <span class="token operator">+</span> count<span class="token punctuation">)</span>
      last <span class="token operator">=</span> <span class="token constant">S</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      count <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  ans<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>last <span class="token operator">+</span> count<span class="token punctuation">)</span>
  <span class="token keyword">return</span> ans<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token constant">S</span><span class="token punctuation">.</span>length <span class="token operator">?</span> ans<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token constant">S</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[p];function c(l,i){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","6. \u5B57\u7B26\u4E32\u538B\u7F29.html.vue"]]);export{r as default};
