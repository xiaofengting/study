import{_ as n,o as s,c as a,a as t}from"./app.f886be28.js";const e={},p=t(`<h3 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u5B57\u7B26\u4E32 s1 \u548C s2 \u5747\u53EA\u6709\u82F1\u6587\u5C0F\u5199\u5B57\u6BCD\u6784\u6210\u3002<br> \u8BF7\u7F16\u5199\u4E00\u4E2A\u7A0B\u5E8F\uFF0C\u786E\u5B9A\u5176\u4E2D\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u91CD\u65B0\u6392\u5217\u540E\uFF0C\u80FD\u5426\u53D8\u6210\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002</p><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// \u793A\u4F8B\u4E00
\u8F93\u5165: s1 = &quot;abc&quot;, s2 = &quot;bca&quot;
\u8F93\u51FA: true 
// \u793A\u4F8B\u4E8C
\u8F93\u5165: s1 = &quot;abc&quot;, s2 = &quot;bad&quot;
\u8F93\u51FA: false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u636E\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8303\u56F4" aria-hidden="true">#</a> \u6570\u636E\u8303\u56F4</h3><p><code>0 &lt;= len(s1) &lt;= 100</code><br><code>0 &lt;= len(s2) &lt;= 100</code></p><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u5173\u952E\u70B9\uFF1A\u54C8\u5E0C\u8868</p><p>\u662F\u5426\u4E92\u4E3A\u5B57\u7B26\u91CD\u6392\uFF0C\u53EA\u8981\u5404\u4E2A\u82F1\u6587\u5B57\u6BCD\u7684\u6570\u91CF\u76F8\u7B49\u5373\u53EF\u3002<br> s1 \u548C s2 \u957F\u5EA6\u4E0D\u540C\uFF0C\u663E\u7136\u4E0D\u6EE1\u8DB3\u6761\u4EF6\u3002</p><p>\u4F7F\u7528\u4E00\u4E2A\u54C8\u5E0C\u8868\uFF0C\u8BB0\u5F55\u5B57\u7B26\u4E32 s1 \u4E2D\uFF0C\u6BCF\u4E2A\u82F1\u6587\u5B57\u6BCD\u51FA\u73B0\u7684\u6B21\u6570\u3002<br> \u4E4B\u540E\u904D\u5386 \u5B57\u7B26\u4E32 s2 \u5373\u53EF\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n)\uFF0Cn \u4E3A\u5B57\u7B26\u4E32\u957F\u5EA6\u3002<br> \u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(S)\uFF0CS \u5B57\u7B26\u96C6\u5927\u5C0F\uFF0C\u6700\u5927\u4E3A 26 \u3002</p><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">CheckPermutation</span><span class="token punctuation">(</span>s1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> s2<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>s1<span class="token punctuation">.</span>length <span class="token operator">!==</span> s2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>

  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> ch <span class="token keyword">of</span> s1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> ch <span class="token keyword">of</span> s2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[p];function c(l,i){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","2. \u5224\u5B9A\u662F\u5426\u4E92\u4E3A\u5B57\u7B26\u91CD\u6392.html.vue"]]);export{r as default};
