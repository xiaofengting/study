import{_ as n,o as s,c as a,a as t}from"./app.f886be28.js";const p={},e=t(`<h3 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u5982\u4F55\u53EA\u7528\u4E00\u4E2A\u6570\u7EC4\u6765\u5B9E\u73B0\u4E09\u4E2A\u6808\u3002<br> \u6784\u9020\u51FD\u6570\u4F1A\u4F20\u5165\u4E00\u4E2A <code>stackSize</code> \u53C2\u6570\uFF0C\u4EE3\u8868\u6BCF\u4E2A\u6808\u7684\u5927\u5C0F\u3002</p><p>\u5E94\u8BE5\u5B9E\u73B0 <code>push(stackNum, value)</code>\u3001<code>pop(stackNum)</code>\u3001<code>isEmpty(stackNum)</code>\u3001<code>peek(stackNum)</code>\u65B9\u6CD5\u3002<br><code>stackNum</code> \u8868\u793A\u6808\u4E0B\u6807\uFF0C\u8303\u56F4 0 - 2 \u3002<code>value</code> \u8868\u793A\u538B\u5165\u7684\u503C\u3002</p><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1A
[&quot;TripleInOne&quot;, &quot;push&quot;, &quot;push&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;isEmpty&quot;]
[[1], [0, 1], [0, 2], [0], [0], [0], [0]]
\u8F93\u51FA\uFF1A
[null, null, null, 1, -1, -1, true]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u6570\u7EC4\u5206\u4E09\u6BB5\uFF0C\u5373\u53EF\u3002</p><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">TripleInOne</span> <span class="token punctuation">{</span>
  stackSize<span class="token operator">:</span> <span class="token builtin">number</span>
  stackarr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  top <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>stackSize<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stackSize <span class="token operator">=</span> stackSize
    <span class="token keyword">this</span><span class="token punctuation">.</span>stackarr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> stackSize<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> stackSize
    <span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> stackSize
  <span class="token punctuation">}</span>
  <span class="token function">push</span><span class="token punctuation">(</span>stackNum<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span>stackNum<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span>stackNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stackSize<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>stackarr<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span>stackNum<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> value
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span>stackNum<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span>stackNum<span class="token punctuation">]</span> <span class="token operator">&gt;</span> stackNum <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stackSize<span class="token punctuation">)</span>
      res <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stackarr<span class="token punctuation">[</span><span class="token operator">--</span><span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span>stackNum<span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
  <span class="token function">peek</span><span class="token punctuation">(</span>stackNum<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span>stackNum<span class="token punctuation">]</span> <span class="token operator">&gt;</span> stackNum <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stackSize<span class="token punctuation">)</span>
      res <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stackarr<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span>stackNum<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span>stackNum<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>top<span class="token punctuation">[</span>stackNum<span class="token punctuation">]</span> <span class="token operator">==</span> stackNum <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stackSize
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[e];function c(l,u){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","18. \u4E09\u5408\u4E00.html.vue"]]);export{k as default};
